/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Facade, FacadeInterface } from "../Facade";

const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "UIntOutOfBounds",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "backingOverview",
        outputs: [
            {
                internalType: "uint192",
                name: "backing",
                type: "uint192",
            },
            {
                internalType: "uint192",
                name: "insurance",
                type: "uint192",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "basketBreakdown",
        outputs: [
            {
                internalType: "address[]",
                name: "erc20s",
                type: "address[]",
            },
            {
                internalType: "uint192[]",
                name: "uoaShares",
                type: "uint192[]",
            },
            {
                internalType: "bytes32[]",
                name: "targets",
                type: "bytes32[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "basketTokens",
        outputs: [
            {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "claimRewards",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "currentAssets",
        outputs: [
            {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "issue",
        outputs: [
            {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
            },
            {
                internalType: "uint256[]",
                name: "deposits",
                type: "uint256[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "maxIssuable",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "pendingIssuances",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "availableAt",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct IFacadeP1.Pending[]",
                name: "issuances",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "pendingUnstakings",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "availableAt",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct IFacadeP1.Pending[]",
                name: "unstakings",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "price",
        outputs: [
            {
                internalType: "uint192",
                name: "",
                type: "uint192",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "runAuctionsForAllTraders",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "stToken",
        outputs: [
            {
                internalType: "contract IStRSR",
                name: "stTokenAddress",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IRToken",
                name: "rToken",
                type: "address",
            },
        ],
        name: "totalAssetValue",
        outputs: [
            {
                internalType: "uint192",
                name: "total",
                type: "uint192",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];

export class Facade__factory {
    static readonly abi = _abi;
    static createInterface(): FacadeInterface {
        return new utils.Interface(_abi) as FacadeInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): Facade {
        return new Contract(address, _abi, signerOrProvider) as Facade;
    }
}
